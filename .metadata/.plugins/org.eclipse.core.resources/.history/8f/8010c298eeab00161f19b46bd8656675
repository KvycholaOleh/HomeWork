package hrestikiNoliki;

import java.util.Scanner;

public class Main {

	public static void main(String[] args) {

		// Scanner sc = new Scanner(System.in);
		// System.out.println("¬вед≥ть м≥н≥мальне число");
		// int min = sc.nextInt();
		// System.out.println("¬вед≥ть максимальне число");
		// int max = sc.nextInt();
		// int number = random(min,max);
		// System.out.println("Number ="+number);
		//
		// while(true){
		// System.out.println("¬гадайте число");
		// int isTrue = sc.nextInt();
		// int two=0;
		// int tree=0;
		// if (number==isTrue) {
		// System.out.println("¬≥рно!");
		// System.exit(0);
		// }
		// two=;
		// if (number-isTrue>two) {
		// System.out.println("Teplo");
		// } else System.out.println("Holodno");
		//
		// }
		//
		// }

		int[][] field = new int[3][3];
		//field[0][0] = 1;
		Scanner sc = new Scanner(System.in);
		while (true) {
			System.out.println("¬вед≥ть координату р€дка");
			int playerCoorX = sc.nextInt();
			System.out.println("¬вед≥ть координату стовпц€");
			int playerCoorY = sc.nextInt();
			if (field[playerCoorX][playerCoorY] == 0) {
				field[playerCoorX][playerCoorY] = 1;
			} else
				System.out.println("÷€ кл≥тинка зайн€та");
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("ѕерем≥г гравець номер "+win(field));
				break;
			}

			int compCoorX = random(0, 2);
			int compCoorY = random(0, 2);
			if (field[compCoorX][compCoorY] == 0) {
				field[compCoorX][compCoorY] = 2;
			} else
				System.out.println("÷€ кл≥тинка зайн€та");
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("ѕерем≥г гравець номер "+win(field));
				break;
			}
			
			
			
			
			
			if (field[playerCoorX][playerCoorY] == 0) {
				field[playerCoorX][playerCoorY] = 1;
			} else
				System.out.println("÷€ кл≥тинка зайн€та");
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("ѕерем≥г гравець номер "+win(field));
				break;
			}

			compCoorX = random(0, 2);
			compCoorY = random(0, 2);
			if (field[compCoorX][compCoorY] == 0) {
				field[compCoorX][compCoorY] = 2;
			} else
				System.out.println("÷€ кл≥тинка зайн€та");
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("ѕерем≥г гравець номер "+win(field));
				break;
			}
			
			
			
			
			if (field[playerCoorX][playerCoorY] == 0) {
				field[playerCoorX][playerCoorY] = 1;
			} else
				System.out.println("÷€ кл≥тинка зайн€та");
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("ѕерем≥г гравець номер "+win(field));
				break;
			}

			compCoorX = random(0, 2);
			compCoorY = random(0, 2);
			if (field[compCoorX][compCoorY] == 0) {
				field[compCoorX][compCoorY] = 2;
			} else
				System.out.println("÷€ кл≥тинка зайн€та");
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("ѕерем≥г гравець номер "+win(field));
				break;
			}
			
			
			
			if (field[playerCoorX][playerCoorY] == 0) {
				field[playerCoorX][playerCoorY] = 1;
			} else
				System.out.println("÷€ кл≥тинка зайн€та");
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("ѕерем≥г гравець номер "+win(field));
				break;
			}

			compCoorX = random(0, 2);
			compCoorY = random(0, 2);
			if (field[compCoorX][compCoorY] == 0) {
				field[compCoorX][compCoorY] = 2;
			} else
				System.out.println("÷€ кл≥тинка зайн€та");
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("ѕерем≥г гравець номер "+win(field));
				break;
			}
			
			
			
			if (field[playerCoorX][playerCoorY] == 0) {
				field[playerCoorX][playerCoorY] = 1;
			} else
				System.out.println("÷€ кл≥тинка зайн€та");
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("ѕерем≥г гравець номер "+win(field));
				break;
			}
			
			break;

		}

		sysoArr(field);

	}

	static void sysoArr(int field[][]) {
		for (int i = 0; i < field.length; i++) {
			for (int j = 0; j < field[i].length; j++) {
				System.out.print(field[i][j] + " ");
			}
			System.out.println();
		}
	}

	static int win(int array[][]) {
		int res = 0;
		if (array[0][0] == array[0][1] && array[0][1] == array[0][2]) {
			if (array[0][0] == 1) {
				res = 1;
			} else
				res = 2;
		}

		if (array[1][0] == array[1][1] && array[1][1] == array[1][2]) {
			if (array[1][0] == 1) {
				res = 1;
			} else
				res = 2;
		}

		if (array[2][0] == array[2][1] && array[2][1] == array[2][2]) {
			if (array[3][0] == 1) {
				res = 1;
			} else
				res = 2;
		}

		if (array[0][0] == array[1][0] && array[1][0] == array[2][0]) {
			if (array[0][0] == 1) {
				res = 1;
			} else
				res = 2;
		}

		if (array[0][1] == array[1][1] && array[1][1] == array[2][1]) {
			if (array[0][1] == 1) {
				res = 1;
			} else
				res = 2;
		}

		if (array[0][2] == array[1][2] && array[1][2] == array[2][2]) {
			if (array[0][2] == 1) {
				res = 1;
			} else
				res = 2;
		}

		return res;

	}

	static int random(int min, int max) {
		return (int) Math.round(Math.random() * (max - min) + min);

	}

}
