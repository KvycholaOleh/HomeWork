package hrestikiNoliki;

import java.util.Scanner;

public class Main2 {

	public static void main(String[] args) {


		int[][] field = new int[3][3];
		// field[0][0] = 1;
		Scanner sc = new Scanner(System.in);
		while (true) {
			
			
			field = playerInput(field);
				
				
			sysoArr(field);
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("Переміг гравець номер " + win(field));
				break;
			}

			int compCoorX = random(0, 2);
			int compCoorY = random(0, 2);

			if (field[compCoorX][compCoorY] == 0) {
				field[compCoorX][compCoorY] = 2;
			} else {
				while (field[compCoorX][compCoorY] != 0) {
					compCoorX = random(0, 2);
					compCoorY = random(0, 2);
				}
				field[compCoorX][compCoorY]=2;
			}

			sysoArr(field);
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("Переміг гравець номер " + win(field));
				break;
			}

			field = playerInput(field);
			
			
			sysoArr(field);
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("Переміг гравець номер " + win(field));
				break;
			}

			compCoorX = random(0, 2);
			compCoorY = random(0, 2);
			if (field[compCoorX][compCoorY] == 0) {
				field[compCoorX][compCoorY] = 2;
			} else {
				while (field[compCoorX][compCoorY] != 0) {
					compCoorX = random(0, 2);
					compCoorY = random(0, 2);
				}
				field[compCoorX][compCoorY]=2;
			}
			sysoArr(field);
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("Переміг гравець номер " + win(field));
				break;
			}

			field = playerInput(field);
			
			sysoArr(field);
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("Переміг гравець номер " + win(field));
				break;
			}

			compCoorX = random(0, 2);
			compCoorY = random(0, 2);
			if (field[compCoorX][compCoorY] == 0) {
				field[compCoorX][compCoorY] = 2;
			} else {
				while (field[compCoorX][compCoorY] != 0) {
					compCoorX = random(0, 2);
					compCoorY = random(0, 2);
				}
				field[compCoorX][compCoorY]=2;
			}
			sysoArr(field);
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("Переміг гравець номер " + win(field));
				break;
			}

			field = playerInput(field);
			sysoArr(field);
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("Переміг гравець номер " + win(field));
				break;
			}

			compCoorX = random(0, 2);
			compCoorY = random(0, 2);
			if (field[compCoorX][compCoorY] == 0) {
				field[compCoorX][compCoorY] = 2;
			} else {
				while (field[compCoorX][compCoorY] != 0) {
					compCoorX = random(0, 2);
					compCoorY = random(0, 2);
				}
				field[compCoorX][compCoorY]=2;
			}
			sysoArr(field);
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("Переміг гравець номер " + win(field));
				break;
			}

			field = playerInput(field);
			sysoArr(field);
			if (win(field) == 1 || win(field) == 2) {
				System.out.println("Переміг гравець номер " + win(field));
				break;
			} else System.out.println("Нічия");

			break;

		}
		

		sysoArr(field);

	}
	
	
	static int [][] playerInput(int array[][]){
		java.util.Scanner sc = new java.util.Scanner(System.in);
		System.out.println("Введіть координату рядка");
		int playerCoorX = sc.nextInt();
		System.out.println("Введіть координату стовпця");
		int playerCoorY = sc.nextInt();
		if (array[playerCoorX][playerCoorY] == 0) {
			array[playerCoorX][playerCoorY] = 1;
		} else{
			while (array[playerCoorX][playerCoorY] != 0){
				System.out.println("Ця клітинка зайнята");
				System.out.println("Введіть координату рядка");
				playerCoorX = sc.nextInt();
				System.out.println("Введіть координату стовпця");
				playerCoorY = sc.nextInt();
			}
			array[playerCoorX][playerCoorY] = 1;
		}
		
		return array;		
	}
	
	

	static void sysoArr(int field[][]) {
		System.out.println("Поле після ходу");
		for (int i = 0; i < field.length; i++) {
			for (int j = 0; j < field[i].length; j++) {
				System.out.print(field[i][j] + " ");
			}
			System.out.println();
		}
		System.out.println();
	}

	static int win(int array[][]) {
		int res = 0;
		if (array[0][0] == array[0][1] && array[0][1] == array[0][2]) {
			if (array[0][0] == 1) {
				res = 1;
			} else if (array[0][0] == 2) {
				res = 2;
			}
		}

		if (array[1][0] == array[1][1] && array[1][1] == array[1][2]) {
			if (array[1][0] == 1) {
				res = 1;
			} else if (array[1][0] == 2) {
				res = 2;
			}
		}

		if (array[2][0] == array[2][1] && array[2][1] == array[2][2]) {
			if (array[2][0] == 1) {
				res = 1;
			} else if (array[2][0] == 2) {
				res = 2;
			}
		}

		if (array[0][0] == array[1][0] && array[1][0] == array[2][0]) {
			if (array[0][0] == 1) {
				res = 1;
			} else if (array[0][0] == 2) {
				res = 2;
			}
		}

		if (array[0][1] == array[1][1] && array[1][1] == array[2][1]) {
			if (array[0][1] == 1) {
				res = 1;
			} else if (array[0][1] == 2) {
				res = 2;
			}
		}

		if (array[0][2] == array[1][2] && array[1][2] == array[2][2]) {
			if (array[0][2] == 1) {
				res = 1;
			} else if (array[0][2] == 2) {
				res = 2;
			}
		}

		if (array[0][0] == array[1][1] && array[1][1] == array[2][2]) {
			if (array[0][0] == 1) {
				res = 1;
			} else if (array[0][0] == 2) {
				res = 2;
			}
		}

		if (array[0][2] == array[1][1] && array[1][1] == array[2][0]) {
			if (array[0][2] == 1) {
				res = 1;
			} else if (array[0][2] == 2) {
				res = 2;
			}
		}

		return res;

	}

	static int random(int min, int max) {
		return (int) Math.round(Math.random() * (max - min) + min);

	}

}
